
include: "rules/00_common.smk"
include: "rules/01_1kgp.smk"
include: "rules/02_assocs.smk"
include: "rules/03_data_extraction.smk"
include: "rules/04_send_figs.smk"

rule all:
    input:
################
## 00_common.smk
################
#        config["trait_ids_file"],
################
## 01_1kgp.smk
################
## download_1KG_38_highcov
#        expand(os.path.join(config["working_dir"], "vcfs/1kg/20201028/chrs/{chr}.vcf.gz"),
#                chr = CHRS
#        ),
## index_highcov
#        expand(os.path.join(config["working_dir"], "vcfs/1kg/20201028/chrs/{chr}.vcf.gz.tbi"),
#                chr = CHRS
#        ),
## download_dbsnp
#        expand(os.path.join(config["working_dir"], "vcfs/dbsnp/20180424/dbsnp.vcf{gz_ext}"),
#                gz_ext = GZ_EXTS
#        ),
## remove_annotations
#        expand(os.path.join(config["working_dir"], "vcfs/1kg/20201028/no_annotations/{chr}.vcf.gz"),
#                chr = CHRS
#        ),
## index_no_annotations
#        expand(os.path.join(config["working_dir"], "vcfs/1kg/20201028/no_annotations/{chr}.vcf.gz.tbi"),
#                chr = CHRS
#        ),
## annotate_highcov
#        expand(os.path.join(config["working_dir"], "vcfs/1kg/20201028/annotated/{chr}.vcf.gz"),
#                chr = CHRS
#        ),
## filter_highcov_samples
#        expand(os.path.join(config["lts_dir"], "vcfs/1kg/20201028/2504_samples/{chr}.vcf.gz"),
#                chr = CHRS
#        ),
## index_vcfs
#        expand(os.path.join(config["lts_dir"], "vcfs/1kg/20201028/2504_samples/{chr}.vcf.gz.tbi"),
#            chr = CHRS),
## combine_1kg_vcfs
#        os.path.join(
#            config["lts_dir"],
#            "vcfs/1kg/20201028/2504_samples_combined/all.vcf.gz"
#        ),
## index_full_1kg_vcf
#        os.path.join(
#            config["lts_dir"],
#            "vcfs/1kg/20201028/2504_samples_combined/all.vcf.gz.tbi"
#        ),
## get_mafs
#        expand(os.path.join(config["lts_dir"], "mafs/1kg/20201028/by_chr/{chr}.csv"),
#                chr = CHRS
#        ),
## combine_mafs
#        os.path.join(config["lts_dir"], "mafs/1kg/20201028/all/all.csv"),
## get_population_file
#        config["local_pop_file"],
## get_population_file_plink
#        config["local_pop_file_plink"],
################
## 02_assocs.smk
################
## get_snp_ids
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/associations_snp_ids/{efo_id}.txt"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS
#        ),
## extract_gtypes
#        expand(os.path.join(config["working_dir"], "vcfs/1kg/20201028/filtered/{date}/{efo_id}/by_chr/{chr}.vcf.gz"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS,
#            chr = CHRS
#        ),
## merge_gtypes
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/high_cov/vcfs/original/{efo_id}.vcf.gz"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS
#        ),
## get_duplicated_sites
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/high_cov/vcfs/no_dups/{efo_id}.vcf.gz"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS
#        ),
################
## 03_data_extraction.smk
################
## get_p_values
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/p-values/{efo_id}.txt"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS
#        ),
## clump_snps
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/high_cov/plink/clumped/{clump_r2}_{clump_kb}/{efo_id}.log"),
#            zip,
#            clump_r2 = CLUMP_R2_ZIP,
#            clump_kb = CLUMP_KB_ZIP,
#            date = DATE_OF_COLLECTION_ZIP,
#            efo_id = EFO_IDS_FILT_ZIP
#        ),
## pull_clumped_ids
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/top_clumped/{clump_r2}_{clump_kb}/{efo_id}.txt"),
#            zip,
#            clump_r2 = CLUMP_R2_ZIP,
#            clump_kb = CLUMP_KB_ZIP,
#            date = DATE_OF_COLLECTION_ZIP,
#            efo_id = EFO_IDS_FILT_ZIP
#        ),
## extract_top_clumped
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/high_cov/vcfs/hits/{clump_r2}_{clump_kb}/{efo_id}.vcf.gz"),
#            zip,
#            clump_r2 = CLUMP_R2_ZIP,
#            clump_kb = CLUMP_KB_ZIP,
#            date = DATE_OF_COLLECTION_ZIP,
#            efo_id = EFO_IDS_FILT_ZIP
#        ),
## get_ref_mafs
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/controls/references/{clump_r2}_{clump_kb}/{efo_id}.csv"),
#            zip,
#            clump_r2 = CLUMP_R2_ZIP,
#            clump_kb = CLUMP_KB_ZIP,
#            date = DATE_OF_COLLECTION_ZIP,
#            efo_id = EFO_IDS_FILT_ZIP
#        ),
## get_control_snps
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/controls/control_snps/{clump_r2}_{clump_kb}/{efo_id}.txt"),
#            zip,
#            date = DATE_OF_COLLECTION_ZIP,
#            clump_r2 = CLUMP_R2_ZIP,
#            clump_kb = CLUMP_KB_ZIP,
#            efo_id = EFO_IDS_FILT_ZIP
#        ),
## get_control_vcf
#        expand(os.path.join(
#            config["working_dir"],
#            "vcfs/1kg/20201028/controls/{date}/{clump_r2_kb}/{efo_id}/all/{efo_id}.vcf.gz"),
#                    date = DATE_OF_COLLECTION,
#                    clump_r2_kb = CLUMP_R2_KB,
#                    efo_id = EFO_IDS_FILT
#        ),
## get_control_vcf_chr
#        expand(os.path.join(
#            config["lts_dir"],
#            "gwasrapidd/{date}/high_cov/vcfs/controls/{clump_r2_kb}/{efo_id}/by_chr/{chr}.vcf.gz"),
#                    date = DATE_OF_COLLECTION,
#                    clump_r2_kb = CLUMP_R2_KB[0],
#                    efo_id = EFO_IDS_FILT[0],
#                    chr = CHRS
#        ),
## merge_control_vcf
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/high_cov/vcfs/controls/{efo_id}.vcf.gz"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS_FILT
#        ),
## get_fst_hits
#        expand(os.path.join(config["working_dir"], "gwasrapidd/{date}/pegas/fst/hits/{clump_r2_kb}/{efo_id}.rds"),
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS_FILT,
#            clump_r2_kb = CLUMP_R2_KB
#        ),
## get_fst_controls
#        expand(os.path.join(config["working_dir"], "gwasrapidd/{date}/pegas/fst/controls/{clump_r2_kb}/{efo_id}.rds"),    
#            date = DATE_OF_COLLECTION,
#            efo_id = EFO_IDS_FILT,
#            clump_r2_kb = CLUMP_R2_KB
#        ),
## consolidate_fst_hits
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/pegas/fst/consol/{clump_r2_kb}/hits.rds"),
#            date = DATE_OF_COLLECTION,
#            clump_r2_kb = CLUMP_R2_KB
#        ),
## consolidate_fst_controls
#        expand(os.path.join(config["lts_dir"], "gwasrapidd/{date}/pegas/fst/consol/{clump_r2_kb}/controls.rds"),
#            date = DATE_OF_COLLECTION,
#            clump_r2_kb = CLUMP_R2_KB
#        ),
################
## 04_send_figs.smk
################
        rules.send_plots_to_google_drive.output,