#####################
# Bash script
#####################

#cd /hps/software/users/birney/ian/repos/human_traits_fst
#conda activate snakemake
#sing_load
#snmk_proj="20210416"
#
#snakemake \
#  --jobs 5000 \
#  --latency-wait 100 \
#  --cluster-config code/snakemake/$snmk_proj/config/cluster.json \
#  --cluster 'bsub -g /snakemake_bgenie -J {cluster.name} -n {cluster.n} -M {cluster.memory} -o {cluster.output} -e {cluster.error}' \
#  --keep-going \
#  --rerun-incomplete \
#  --use-conda \
#  --use-singularity \
#  -s code/snakemake/$snmk_proj/Snakefile \
#  -p

#####################
# Libraries
#####################

import os.path

#####################
# Variables
#####################

#Â Config file
configfile: "code/snakemake/20210416/config/config.yaml"

# Chromosomes
CHRS  = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22']

# Set up FTP

from snakemake.remote.FTP import RemoteProvider as FTPRemoteProvider
FTP = FTPRemoteProvider()

#####################
# Rules
#####################

rule all:
    input:
         expand(os.path.join(config["working_dir"], "vcfs/1kg/chrs/{chr}.vcf.gz"),
            chr = CHRS),
         os.path.join(config["working_dir"], "vcfs/1kg/merged/1kg_all.vcf.gz")

rule download_1KG:
    input:
        FTP.remote(os.path.join(config["ftp_dir_1kg"], "ALL.chr{chr}.phase3_shapeit2_mvncall_integrated_v5b.20130502.genotypes.vcf.gz"),
            keep_local = True),
    output:
        os.path.join(config["working_dir"], "vcfs/1kg/chrs/{chr}.vcf.gz")
    shell:
        """
        mv {input} {output}
        """

rule merge_1KG:
    input:
        expand(os.path.join(config["working_dir"], "vcfs/1kg/chrs/{chr}.vcf.gz"),
            chr = CHRS)
    output:
        os.path.join(config["working_dir"], "vcfs/1kg/merged/1kg_all.vcf.gz")
    params:
        files = lambda wildcards, input: " I=".join(input),
    singularity:
        config["picard"]
    shell:
        """
        java -jar /usr/picard/picard.jar MergeVcfs \
            I={params.files} \
            O={output} \
            TMP_DIR={config[tmp_dir]}            
        """
    

